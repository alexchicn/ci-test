name: 'release'

on:
  push:
    paths-ignore:
    - 'docs/**'
    - 'README.md'
    - 'LICENSE'
    - '.readthedocs.yml'
    - '.git*'
    tags:
    - '*'

jobs:
  linux:
    name: 'for linux'
    runs-on: ubuntu-latest
    steps:
    - name: 'checkout'
      uses: actions/checkout@v2
    - name: 'build'
      run: |
        mkdir build
        cd build
        cmake ../
        make
        cd ../
    - name: 'package'
      run: |
        cd output
        zip -r 'test.linux.zip' ./
        cd ../
    - name: 'upload artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test.linux
        path: output/
  macos:
    name: 'build for macos'
    runs-on: macos-latest
    needs: check
    steps:
    - name: 'checkout'
      uses: actions/checkout@v2
    - name: 'ready and build'
      run: |
        mkdir build
        cd build
        cmake ../
        make
        cd ../
    - name: 'upload artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test.macos
        path: output/
  release:
    name: 'release'
    runs-on: ubuntu-latest
    needs: [ linux ]
    steps:
    - name: 'get version by tag'
      id: get_version
      uses: battila7/get-version-action@v2
    - name: 'create release'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: '${{ github.ref }}'
        release_name: 'Release v${{ github.ref }}'
        body: |
          'changes in this release'
          '- A'
          '- B'
        draft: false
        prerelease: false
    - name: 'download release asset linux'
      uses: actions/download-artifact@v2
      with:
        path: 'output/'
    - name: 'upload release asset linux'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: 'output/test.linux/test.linux.zip'
        asset_name: 'test.v${{ steps.get_version.outputs.version }}.linux.zip'
        asset_content_type: application/zip
    - name: 'upload release asset macos'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: 'output/test.macos/test.macos.zip'
        asset_name: 'test.v${{ steps.get_version.outputs.version }}.macos.zip'
        asset_content_type: application/zip
