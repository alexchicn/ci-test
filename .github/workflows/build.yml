name: build

on:
  push:
    branches: [ master ]
    paths-ignore:
    - 'docs/**'
    - 'README.md'
    - 'LICENSE'
    - '.readthedocs.yml'
    - '.git*'
  pull_request:
    branches: [ master ]
    paths-ignore:
    - '.github/release.yml'
    - 'docs/**'
    - 'README.md'
    - 'LICENSE'
    - '.readthedocs.yml'
    - '.git*'

jobs:
  check:
    name: 'check by cppcheck'
    runs-on: ubuntu-latest
    steps:
    - name: 'install cppcheck'
      run: 'sudo apt-get install cppcheck'
    - name: 'check'
      run: 'cppcheck ./ --enable=warning,performance,portability --xml-version=2 --error-exitcode=1 -i external/ -i build/'
  android:
    name: 'for android'
    runs-on: ubuntu-latest
    needs: check
    steps:
    - name: 'checkout'
      uses: actions/checkout@v2
    - name: 'ready and build'
      run: |
        export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk-bundle
        sudo apt-get install ninja-build
        mkdir build && cd build
        cmake -G "Ninja" -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_ABI=armeabi-v7a -DANDROID_NDK=$ANDROID_NDK -DANDROID_NATIVE_API_LEVEL=19 -DANDROID_TOOLCHAIN=clang ../
        ninja foo
        cd ../
    - name: 'upload artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test.android
        path: output/
  linux:
    name: 'build for linux'
    runs-on: ubuntu-latest
    needs: check
    steps:
    - name: 'checkout'
      uses: actions/checkout@v2
    - name: Build
      run: |
        mkdir build
        cd build
        cmake ../
        make
        cd ../
    - name: 'upload artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test.linux
        path: output/
  macos:
    name: 'build for macos'
    runs-on: macos-latest
    needs: check
    steps:
    - name: 'checkout'
      uses: actions/checkout@v2
    - name: 'ready and build'
      run: |
        mkdir build
        cd build
        cmake ../
        make
        cd ../
    - name: 'upload artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test.macos
        path: output/
  ios:
    name: 'build for ios'
    runs-on: macos-latest
    needs: check
    steps:
    - name: 'checkout'
      uses: actions/checkout@v2
    - name: 'update submodules'
      run: |
        git submodule update --init
    - name: 'ready and build'
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=../externals/ios-cmake/toolchain/iOS.cmake -DIOS_PLATFORM=OS ../
        make
        cd ../
    - name: 'upload artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test.ios
        path: output/
  windows_x64:
    name: 'build for windows x64'
    runs-on: windows-latest
    needs: check
    steps:
    - name: 'checkout'
      uses: actions/checkout@v2
    - name: 'setup msbuild'
      uses: microsoft/setup-msbuild@v1.0.2
    - name: 'ready and build'
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019" -A "x64" -D CMAKE_BUILD_TYPE=RELEASE ../
        msbuild test.sln /t:Build /p:Configuration="Release" /p:Platform="x64"
    - name: 'upload artifact'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test.windows.x64
        path: output/
